getwd()
check()
devtools::check()
use_mit_license()
devtools::use_mit_license()
??use_mit_license()
usethis::use_mit_license()
?use_packagge()
?use_package()
library(usethis)
use_package(Seurat, type = "Imports")
use_package("Seurat", type = "Imports")
use_package("biomaRt", type = "Depends")
devtools::check()
use_package("biomaRt", type = "Imports")
devtools::check()
usethis::use_github_links()
usethis::use_tidy_description()
usethis::use_package("dplyr", min_version = TRUE)
usethis::use_package("ape", min_version = TRUE)
usethis::use_package("biomaRt", min_version = TRUE)
usethis::use_package("cgdsr", min_version = TRUE)
usethis::use_package("clusterProfiler", min_version = TRUE)
usethis::use_package("factoextra", min_version = TRUE)
usethis::use_package("forcats", min_version = TRUE)
usethis::use_package("ggplot2", min_version = TRUE)
usethis::use_package("gplots", min_version = TRUE)
usethis::use_package("org.Hs.eg.db", min_version = TRUE)
usethis::use_package("org.Mm.eg.db", min_version = TRUE)
usethis::use_package("scico", min_version = TRUE)
usethis::use_package("Seurat", min_version = TRUE)
usethis::use_package("tidyr", min_version = TRUE)
usethis::use_package("base", min_version = TRUE)
usethis::use_package("utils", min_version = TRUE)
usethis::use_package("stats", min_version = TRUE)
usethis::use_package_doc()
usethis::use_import_from("Seurat", "RunUMAP")
use_import_from(?)
?use_import_from()
usethis::use_import_from("Seurat", c("RunUMAP", "UMAPPlot"))
usethis::use_import_from(ggplot2)
usethis::use_import_from("ggplot2")
usethis::use_import_from("ape", "as.phylo")
usethis::use_import_from("biomaRt", c("getLDS", "useMart"))
usethis::use_import_from("cgdsr", c("CGDS", "getProfileData"))
usethis::use_import_from("clusterProfiler", c("enrichGO"))
usethis::use_import_from("dplyr", c("arrange", "distinct", "mutate", "pull"))
usethis::use_import_from("factoextra", c("eclust", "fviz_dend"))
usethis::use_import_from("forcats", c("fct_reorder"))
usethis::use_import_from("ggplot2", c("coord_flip", "element_text", "geom_bar", "geom_hline", "scale_fill_gradient", "theme", "theme_bw"))
usethis::use_import_from("ggplot2", c("coord_flip", "element_text", "geom_bar", "geom_hline", "scale_fill_gradient2", "theme", "theme_bw"))
usethis::use_import_from("gplots", c("heatmap.2"))
usethis::use_import_from("grDevices", c("colorRampPalette"))
usethis::use_import_from("scico", c("scico"))
usethis::use_import_from("stats", c("hclust", "dist"))
usethis::use_import_from("tidyr", c("as_tibble"))
org.Hs.eg.db
?col2rgb
usethis::use_import_from("grDevices", c("col2rgb"))
?rgb
usethis::use_import_from("grDevices", c("rgb"))
?apply
?dev.copy
usethis::use_import_from("grDevices", c("dev.copy", "dev.off"))
?pdf
usethis::use_import_from("grDevices", c("pdf"))
devtools::document()
roxygen2::roxygenise()
roxygen2::roxygenise()
check()
usethis::check()
devtools::check()
?abline
usethis::use_import_from("graphics", c("abline", "axis", "box", "lines", "mtext",
"par", "title"))
usethis::use_import_from("stats", c("cor", "cor.test", "median", "p.adjust"))
usethis::use_import_from("utils", c("head"))
?%>%
?NoLegend
usethis::use_import_from("Seurat", c("NoLegend"))
?utils
magrittr::`%>%`()
devtools::document()
devtools::document()
library(ggplot2)
devtools::document()
install.packages("ggplot2")
install.packages("ggplot2")
devtools::document()
roxygen2::roxygenise()
devtools::document()
devtools::create
?devtools::create
